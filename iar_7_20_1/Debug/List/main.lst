###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        28/May/2018  09:17:43
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\application\main.c
#    Command line =  
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\application\main.c
#        -lC
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\Debug\List\
#        -o
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\..\bsp\
#        -I
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\..\application\
#        -I
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\..\nordic_sdk4_2_2\
#        -I
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\..\nordic_sdk4_2_2\Include\
#        -I
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\..\nordic_sdk4_2_2\Include\ant\
#        -I
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\..\nordic_sdk4_2_2\Include\app_common\
#        -I
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\..\nordic_sdk4_2_2\Source\
#        -I
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\..\nordic_sdk4_2_2\Source\app_common\
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\Debug\List\main.lst
#    Object file  =  
#        C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\iar_7_20_1\Debug\Obj\main.o
#
###############################################################################

C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\application\main.c
      1          /***********************************************************************************************************************
      2          File: main.c                                                                
      3          
      4          Description:
      5          Container for the MPG nRF51422 firmware.  
      6          ***********************************************************************************************************************/
      7          
      8          #include "configuration.h"
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          /* New variables */

   \                                 In section .bss, align 4
     15          volatile u32 G_u32SystemFlags = 0;                     /* Global system flags */
   \                     G_u32SystemFlags:
   \   00000000                      DS8 4
     16          
     17          /*--------------------------------------------------------------------------------------------------------------------*/
     18          /* External global variables defined in other files (must indicate which file they are defined in) */
     19          extern volatile u32 G_u32SystemTime1ms;                /* From board-specific source file */
     20          extern volatile u32 G_u32SystemTime1s;                 /* From board-specific source file */
     21          
     22          extern fnCode_type SCRCC_SM;
     23          
     24          /***********************************************************************************************************************
     25          Global variable definitions with scope limited to this local application.
     26          Variable names shall start with "Main_" and be declared as static.
     27          ***********************************************************************************************************************/

   \                                 In section .bss, align 4
     28          u32 Main_u32ErrorCode;
   \                     Main_u32ErrorCode:
   \   00000000                      DS8 4
     29          

   \                                 In section .data, align 4
     30          u8 Main_u8TestMessage[] = "9876 test message from ANT";
   \                     Main_u8TestMessage:
   \   00000000   0x39 0x38          DC8 "9876 test message from ANT"
   \              0x37 0x36    
   \              0x20 0x74    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x66 0x72    
   \              0x6F 0x6D    
   \              0x20 0x41    
   \              0x4E 0x54    
   \              0x00         
   \   0000001B   0x00               DC8 0
     31          
     32          /***********************************************************************************************************************
     33          Main Program
     34          Main has two sections:
     35          
     36          1. Initialization which is run once on power-up or reset.  All drivers and applications are setup here without timing
     37          contraints but must complete execution regardless of success or failure of starting the application. 
     38          
     39          2. Main loop.  This is an event-driven system that sequentially executes tasks that require servicing in the event queue.
     40          
     41          ***********************************************************************************************************************/
     42          

   \                                 In section .text, align 4, keep-with-next
     43          void main(void)
     44          {
   \                     main: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     45            u32 u32Counter = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     46            u32 u32M3PeriodCounter = 0;
   \   00000004   0x2500             MOVS     R5,#+0
     47            
     48            /* Low level initialization */
     49            G_u32SystemFlags |= _SYSTEM_INITIALIZING;  
   \   00000006   0x4813             LDR      R0,??main_0
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x2180             MOVS     R1,#+128
   \   0000000C   0x0609             LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000000E   0x4301             ORRS     R1,R1,R0
   \   00000010   0x4810             LDR      R0,??main_0
   \   00000012   0x6001             STR      R1,[R0, #+0]
     50          
     51            InterruptSetup();
   \   00000014   0x.... 0x....      BL       InterruptSetup
     52            ClockSetup();
   \   00000018   0x.... 0x....      BL       ClockSetup
     53            GpioSetup();
   \   0000001C   0x.... 0x....      BL       GpioSetup
     54          
     55            WatchDogSetup(); /* During development, set to not reset processor if timeout */
   \   00000020   0x.... 0x....      BL       WatchDogSetup
     56            SysTickSetup();
   \   00000024   0x.... 0x....      BL       SysTickSetup
     57          
     58            /* Driver initialization */
     59            LedInitialize();
   \   00000028   0x.... 0x....      BL       LedInitialize
     60            ButtonInitialize();
   \   0000002C   0x.... 0x....      BL       ButtonInitialize
     61            //AntInitialize();
     62          
     63            /* Application initialization */
     64            ScrccInitialize();
   \   00000030   0x.... 0x....      BL       ScrccInitialize
     65            
     66            /* Exit initialization */
     67            G_u32SystemFlags &= ~_SYSTEM_INITIALIZING;
   \   00000034   0x4807             LDR      R0,??main_0
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x0040             LSLS     R0,R0,#+1        ;; ZeroExtS R0,R0,#+1,#+1
   \   0000003A   0x0840             LSRS     R0,R0,#+1
   \   0000003C   0x4905             LDR      R1,??main_0
   \   0000003E   0x6008             STR      R0,[R1, #+0]
     68            
     69            
     70            /* Main loop */  
     71            while(1)
     72            {
     73              LedUpdate();
   \                     ??main_1: (+1)
   \   00000040   0x.... 0x....      BL       LedUpdate
     74              
     75              ButtonRunActiveState();
   \   00000044   0x.... 0x....      BL       ButtonRunActiveState
     76              Scrcc_SM();
                     ^
Warning[Pe223]: function "Scrcc_SM" declared implicitly

    u32 u32Counter = 0;
        ^
"C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\application\main.c",45  Warning[Pe177]: 
          variable "u32Counter" was declared but never referenced

    u32 u32M3PeriodCounter = 0;
        ^
"C:\Users\ENGENUICS5\Documents\GitHub\SummerCamp2018_RC_Car\application\main.c",46  Warning[Pe177]: 
          variable "u32M3PeriodCounter" was declared but never referenced
   \   00000048   0x.... 0x....      BL       Scrcc_SM
     77                  
     78              /* System sleep*/
     79              SystemSleep();
   \   0000004C   0x.... 0x....      BL       SystemSleep
   \   00000050   0xE7F6             B        ??main_1
   \   00000052   0xBF00             Nop      
   \                     ??main_0:
   \   00000054   0x........         DC32     G_u32SystemFlags
     80              
     81            } /* end while(1) main super loop */
     82            
     83          } /* end main() */
     84          
     85          
     86          /*--------------------------------------------------------------------------------------------------------------------*/
     87          /* End of File */
     88          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   main
        16   -> ButtonInitialize
        16   -> ButtonRunActiveState
        16   -> ClockSetup
        16   -> GpioSetup
        16   -> InterruptSetup
        16   -> LedInitialize
        16   -> LedUpdate
        16   -> ScrccInitialize
        16   -> Scrcc_SM
        16   -> SysTickSetup
        16   -> SystemSleep
        16   -> WatchDogSetup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  G_u32SystemFlags
       4  Main_u32ErrorCode
      28  Main_u8TestMessage
      88  main

 
  8 bytes in section .bss
 28 bytes in section .data
 88 bytes in section .text
 
 88 bytes of CODE memory
 36 bytes of DATA memory

Errors: none
Warnings: 3
